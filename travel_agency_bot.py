from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto,
)
from telegram.constants import ParseMode
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
    Defaults,
)
import os

# ==============================
# тЬЕ CONFIG
# ==============================
# 1) Put your BotFather token here OR set environment variable TELEGRAM_BOT_TOKEN
TOKEN = os.getenv("angelswingsint", "7405344536:AAFWG9yaSc-Wt_-j26YowynR4S6ujZjrQPc")

# 2) Agency info (edit as needed)
AGENCY = {
    "name": "Angel's Wings",
    "phone": "+880101641591041",
    "whatsapp": "+8801977802655",
    "email": "angelswingsshanto@gmail.com",
    "address_bn": "ржмрж╛рж╕рж╛рждрж┐ ржХржиржбрзЛржорж┐ржирж┐ржпрж╝рж╛ржо (рзйржпрж╝ рждрж▓рж╛), ржмрж╛рзЬрж┐ рззрзл, рж░рзЛржб рззрзн, ржмржирж╛ржирзА рж╕рж┐/ржП, ржврж╛ржХрж╛-рззрзирззрзй, ржмрж╛ржВрж▓рж╛ржжрзЗрж╢",
    # Optional Google Maps link (edit with your exact map link if you have one)
    "maps": "https://maps.google.com/?q=Basati+Condominium,+House+15,+Road+17,+Banani+C/A,+Dhaka+1213",
}

# 3) Sample media / images (replace with your own hosted URLs)
IMAGES = {
    "banner": "https://images.unsplash.com/photo-1502920917128-1aa500764b8a",  # airplane wing
    "thailand": "https://images.unsplash.com/photo-1519125323398-675f0ddb6308",
    "malaysia": "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee",
    "dubai": "https://images.unsplash.com/photo-1505764706515-aa95265c5abc",
}

# ==============================
# ЁЯМР Simple i18n (Bangla/English)
# ==============================

def t(key: str, lang: str = "bn") -> str:
    texts = {
        "welcome_bn": """
<b>ЁЯСЛ рж╕рзНржмрж╛ржЧрждржо {name}!</b>\nржЖржорж╛ржжрзЗрж░ ржкрзНрж░ржлрзЗрж╢ржирж╛рж▓ ржЯрзНрж░рж╛ржнрзЗрж▓ ржПржЬрзЗржирзНрж╕рж┐ ржмржЯрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржоред\nржирж┐ржЪрзЗрж░ ржорзЗржирзБ ржерзЗржХрзЗ ржПржХржЯрж┐ ржЕржкрж╢ржи ржмрж╛ржЫрж╛ржЗ ржХрж░рзБржиред
""",
        "welcome_en": """
<b>ЁЯСЛ Welcome {name}!</b>\nWelcome to our professional travel agency bot.\nPlease choose an option from the menu below.
""",
        "menu_bn": "ржорзЗржирзБ",
        "menu_en": "Menu",
        "flight_bn": "тЬИя╕П ржлрзНрж▓рж╛ржЗржЯ ржЗржиржлрзЛ",
        "flight_en": "тЬИя╕П Flight Info",
        "hotel_bn": "ЁЯПи рж╣рзЛржЯрзЗрж▓ ржмрзБржХрж┐ржВ",
        "hotel_en": "ЁЯПи Hotel Booking",
        "tour_bn": "ЁЯМ┤ ржЯрзНржпрзБрж░ ржкрзНржпрж╛ржХрзЗржЬ",
        "tour_en": "ЁЯМ┤ Tour Packages",
        "visa_bn": "ЁЯЫВ ржнрж┐рж╕рж╛ ржЗржиржлрзЛ",
        "visa_en": "ЁЯЫВ Visa Info",
        "address_bn": "ЁЯПв ржарж┐ржХрж╛ржирж╛",
        "address_en": "ЁЯПв Address",
        "contact_bn": "ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ",
        "contact_en": "ЁЯУЮ Contact Us",
        "language_bn": "ЁЯМР Language / ржнрж╛рж╖рж╛",
        "flight_text_bn": (
            "<b>тЬИя╕П ржЖржорж╛ржжрзЗрж░ ржлрзНрж▓рж╛ржЗржЯ ржбрж┐рж▓:</b>\n\n"
            "тАв ржврж╛ржХрж╛ тЖТ ржжрзБржмрж╛ржЗ (OW): <b>BDT 35,000</b> ржерзЗржХрзЗ\n"
            "тАв ржврж╛ржХрж╛ тЖТ ржмрзНржпрж╛ржВржХржХ (RT): <b>BDT 28,500</b> ржерзЗржХрзЗ\n"
            "тАв ржврж╛ржХрж╛ тЖТ ржХрзБрзЯрж╛рж▓рж╛рж▓рж╛ржоржкрзБрж░ (RT): <b>BDT 26,000</b> ржерзЗржХрзЗ\n\n"
            "ржмрзБржХрж┐ржВрзЯрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: {phone} / WhatsApp: {whatsapp}"
        ),
        "flight_text_en": (
            "<b>тЬИя╕П Our Flight Deals:</b>\n\n"
            "тАв Dhaka тЖТ Dubai (OW): <b>from BDT 35,000</b>\n"
            "тАв Dhaka тЖТ Bangkok (RT): <b>from BDT 28,500</b>\n"
            "тАв Dhaka тЖТ Kuala Lumpur (RT): <b>from BDT 26,000</b>\n\n"
            "For booking, contact: {phone} / WhatsApp: {whatsapp}"
        ),
        "hotel_text_bn": (
            "<b>ЁЯПи рж╣рзЛржЯрзЗрж▓ ржмрзБржХрж┐ржВ:</b>\n\n"
            "тАв Bangkok Grand Hotel тАФ <b>BDT 5,000/night</b>\n"
            "тАв Dubai Luxury Inn тАФ <b>BDT 8,000/night</b>\n"
            "тАв Kuala Star Suites тАФ <b>BDT 6,200/night</b>\n\n"
            "рж▓рзЛржХрзЗрж╢ржи ржУ ржХржиржлрж╛рж░рзНржорзЗрж╢ржирзЗрж░ ржЬржирзНржп ржЗржиржмржХрзНрж╕ ржХрж░рзБржиред"
        ),
        "hotel_text_en": (
            "<b>ЁЯПи Hotel Booking:</b>\n\n"
            "тАв Bangkok Grand Hotel тАФ <b>BDT 5,000/night</b>\n"
            "тАв Dubai Luxury Inn тАФ <b>BDT 8,000/night</b>\n"
            "тАв Kuala Star Suites тАФ <b>BDT 6,200/night</b>\n\n"
            "Message us for location and confirmation."
        ),
        "tour_text_bn": (
            "<b>ЁЯМ┤ ржЯрзНржпрзБрж░ ржкрзНржпрж╛ржХрзЗржЬ:</b>\nржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржжрзЗрж╢рзЗрж░ ржкрзНржпрж╛ржХрзЗржЬ ржжрзЗржЦрждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред"
        ),
        "tour_text_en": (
            "<b>ЁЯМ┤ Tour Packages:</b>\nUse the buttons below to view packages by destination."
        ),
        "visa_text_bn": (
            "<b>ЁЯЫВ ржнрж┐рж╕рж╛ ржЗржиржлрзЛ:</b>\n\n"
            "тАв Thailand Tourist Visa тАФ <b>BDT 4,500</b> | Processing: 5тАУ7 days\n"
            "тАв Malaysia Tourist Visa тАФ <b>BDT 6,000</b> | Processing: 5тАУ10 days\n"
            "тАв UAE (Dubai) Tourist Visa тАФ <b>BDT 8,000</b> | Processing: 3тАУ5 days\n"
            "тАв Singapore Tourist Visa тАФ <b>BDT 9,500</b> | Processing: 7тАУ10 days\n\n"
            "ржирзЛржЯ: ржбржХрзБржорзЗржирзНржЯрж╕ ржУ ржлрж┐ ржкрж░рж┐ржмрж░рзНрждржи рж╣рждрзЗ ржкрж╛рж░рзЗ тАФ ржЗржиржмржХрзНрж╕рзЗ ржХржиржлрж╛рж░рзНржо ржХрж░рзБржиред"
        ),
        "visa_text_en": (
            "<b>ЁЯЫВ Visa Info:</b>\n\n"
            "тАв Thailand Tourist Visa тАФ <b>BDT 4,500</b> | Processing: 5тАУ7 days\n"
            "тАв Malaysia Tourist Visa тАФ <b>BDT 6,000</b> | Processing: 5тАУ10 days\n"
            "тАв UAE (Dubai) Tourist Visa тАФ <b>BDT 8,000</b> | Processing: 3тАУ5 days\n"
            "тАв Singapore Tourist Visa тАФ <b>BDT 9,500</b> | Processing: 7тАУ10 days\n\n"
            "Note: Docs & fees may change тАФ please confirm in chat."
        ),
        "address_text_bn": (
            "<b>ЁЯПв ржЖржорж╛ржжрзЗрж░ ржарж┐ржХрж╛ржирж╛:</b>\n{address}\n\n"
            "ЁЯУН Google Maps: {maps}"
        ),
        "address_text_en": (
            "<b>ЁЯПв Our Address:</b>\n{address}\n\n"
            "ЁЯУН Google Maps: {maps}"
        ),
        "contact_text_bn": (
            "<b>ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ:</b>\n"
            "тАв ржлрзЛржи: {phone}\n"
            "тАв WhatsApp: {whatsapp}\n"
            "тАв ржЗржорзЗржЗрж▓: {email}"
        ),
        "contact_text_en": (
            "<b>ЁЯУЮ Contact Us:</b>\n"
            "тАв Phone: {phone}\n"
            "тАв WhatsApp: {whatsapp}\n"
            "тАв Email: {email}"
        ),
        "tour_buttons_bn": [
            ("ЁЯЗ╣ЁЯЗн ржерж╛ржЗрж▓рзНржпрж╛ржирзНржб", "tour_th"),
            ("ЁЯЗ▓ЁЯЗ╛ ржорж╛рж▓ржпрж╝рзЗрж╢рж┐ржпрж╝рж╛", "tour_my"),
            ("ЁЯЗжЁЯЗк ржжрзБржмрж╛ржЗ", "tour_ae"),
        ],
        "tour_buttons_en": [
            ("ЁЯЗ╣ЁЯЗн Thailand", "tour_th"),
            ("ЁЯЗ▓ЁЯЗ╛ Malaysia", "tour_my"),
            ("ЁЯЗжЁЯЗк Dubai", "tour_ae"),
        ],
        "back_bn": "тмЕя╕П ржмрзНржпрж╛ржХ",
        "back_en": "тмЕя╕П Back",
    }
    return texts.get(f"{key}_{lang}", texts.get(key, key))


# ==============================
# ЁЯза Helpers
# ==============================

def lang_of(user_data: dict) -> str:
    return user_data.get("lang", "bn")


def main_menu_kb(lang: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(t("flight", lang), callback_data="flight")],
        [InlineKeyboardButton(t("hotel", lang), callback_data="hotel")],
        [InlineKeyboardButton(t("tour", lang), callback_data="tour")],
        [InlineKeyboardButton(t("visa", lang), callback_data="visa")],
        [InlineKeyboardButton(t("address", lang), callback_data="address")],
        [InlineKeyboardButton(t("contact", lang), callback_data="contact")],
        [InlineKeyboardButton(t("language_bn"), callback_data="language")],
    ])


def tour_menu_kb(lang: str) -> InlineKeyboardMarkup:
    buttons = t("tour_buttons", lang)
    rows = [[InlineKeyboardButton(lbl, callback_data=data)] for (lbl, data) in buttons]
    rows.append([InlineKeyboardButton(t("back", lang), callback_data="menu")])
    return InlineKeyboardMarkup(rows)


# ==============================
# ЁЯОп Handlers
# ==============================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    # default language Bangla
    context.user_data.setdefault("lang", "bn")
    lang = lang_of(context.user_data)

    # Send banner image (optional)
    if IMAGES.get("banner"):
        try:
            await update.message.reply_photo(
                IMAGES["banner"],
                caption=(t("welcome", lang).format(name=user.first_name or "")),
                parse_mode=ParseMode.HTML,
                reply_markup=main_menu_kb(lang),
            )
            return
        except Exception:
            pass

    # Fallback if photo fails
    await update.message.reply_text(
        t("welcome", lang).format(name=user.first_name or ""),
        parse_mode=ParseMode.HTML,
        reply_markup=main_menu_kb(lang),
    )


async def show_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = lang_of(context.user_data)
    query = update.callback_query
    await query.answer()
    await query.edit_message_caption(
        caption=t("welcome", lang).format(name=update.effective_user.first_name or ""),
        parse_mode=ParseMode.HTML,
        reply_markup=main_menu_kb(lang),
    ) if query.message.caption else await query.edit_message_text(
        text=t("welcome", lang).format(name=update.effective_user.first_name or ""),
        parse_mode=ParseMode.HTML,
        reply_markup=main_menu_kb(lang),
    )


async def on_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    lang = lang_of(context.user_data)

    data = query.data
    if data == "menu":
        return await show_menu(update, context)

    if data == "language":
        # toggle language
        context.user_data["lang"] = "en" if lang == "bn" else "bn"
        lang = lang_of(context.user_data)
        return await show_menu(update, context)

    if data == "flight":
        text = t("flight_text", lang).format(**AGENCY)
    elif data == "hotel":
        text = t("hotel_text", lang)
    elif data == "tour":
        text = t("tour_text", lang)
        kb = tour_menu_kb(lang)
        return await _edit(query, text, kb)
    elif data == "visa":
        text = t("visa_text", lang)
    elif data == "address":
        text = t("address_text", lang).format(address=AGENCY["address_"+lang], maps=AGENCY["maps"]) if f"address_{lang}" in AGENCY else t("address_text", lang).format(address=AGENCY["address_bn"], maps=AGENCY["maps"])
    elif data == "contact":
        text = t("contact_text", lang).format(**AGENCY)
    elif data in ("tour_th", "tour_my", "tour_ae"):
        return await send_tour_package(query, lang, data)
    else:
        text = "Unknown option"

    await _edit(query, text, main_menu_kb(lang))


async def _edit(query, text: str, kb: InlineKeyboardMarkup):
    # edit caption if message has photo caption; else edit text
    if query.message.photo:
        try:
            await query.edit_message_caption(caption=text, parse_mode=ParseMode.HTML, reply_markup=kb)
            return
        except Exception:
            pass
    await query.edit_message_text(text=text, parse_mode=ParseMode.HTML, reply_markup=kb)


# ===== Tour package sender =====
async def send_tour_package(query, lang: str, code: str):
    if code == "tour_th":
        title_bn = "ЁЯЗ╣ЁЯЗн ржерж╛ржЗрж▓рзНржпрж╛ржирзНржб рзл ржжрж┐ржи рзк рж░рж╛ржд"
        title_en = "ЁЯЗ╣ЁЯЗн Thailand 5D4N"
        price = "BDT 50,000"
        photo = IMAGES.get("thailand")
        highlights_bn = "ржмрзНржпрж╛ржВржХржХ + ржкрж╛рждрж╛рзЯрж╛, рж╣рзЛржЯрзЗрж▓, ржмрзНрж░рзЗржХржлрж╛рж╕рзНржЯ, ржПрзЯрж╛рж░ржкрзЛрж░рзНржЯ ржЯрзНрж░рж╛ржирзНрж╕ржлрж╛рж░"
        highlights_en = "Bangkok + Pattaya, hotel, breakfast, airport transfers"
    elif code == "tour_my":
        title_bn = "ЁЯЗ▓ЁЯЗ╛ ржорж╛рж▓ржпрж╝рзЗрж╢рж┐ржпрж╝рж╛ рзк ржжрж┐ржи рзй рж░рж╛ржд"
        title_en = "ЁЯЗ▓ЁЯЗ╛ Malaysia 4D3N"
        price = "BDT 40,000"
        photo = IMAGES.get("malaysia")
        highlights_bn = "ржХрзБржпрж╝рж╛рж▓рж╛рж▓рж╛ржоржкрзБрж░ рж╕рж┐ржЯрж┐ ржЯрзНржпрзБрж░, ржЧрзЗржирзНржЯрж┐ржВ, рж╣рзЛржЯрзЗрж▓, ржмрзНрж░рзЗржХржлрж╛рж╕рзНржЯ"
        highlights_en = "Kuala Lumpur city tour, Genting, hotel, breakfast"
    else:  # tour_ae
        title_bn = "ЁЯЗжЁЯЗк ржжрзБржмрж╛ржЗ рзл ржжрж┐ржи рзк рж░рж╛ржд"
        title_en = "ЁЯЗжЁЯЗк Dubai 5D4N"
        price = "BDT 65,000"
        photo = IMAGES.get("dubai")
        highlights_bn = "ржбрзЗржЬрж╛рж░рзНржЯ рж╕рж╛ржлрж╛рж░рж┐, ржбрж╛ржЙржиржЯрж╛ржЙржи, ржорзЗрж░рж┐ржирж╛ ржХрзНрж░рзБржЬ, рж╣рзЛржЯрзЗрж▓"
        highlights_en = "Desert safari, Downtown, Marina cruise, hotel"

    if lang == "bn":
        caption = (
            f"<b>{title_bn}</b>\n"
            f"ржкрзНржпрж╛ржХрзЗржЬ ржорзВрж▓рзНржп: <b>{price}</b>\n"
            f"ржЗржиржХрзНрж▓рзБржбрзЗржб: {highlights_bn}\n\n"
            f"ржмрзБржХрж┐ржВ: {AGENCY['phone']} / WhatsApp: {AGENCY['whatsapp']}"
        )
    else:
        caption = (
            f"<b>{title_en}</b>\n"
            f"Package Price: <b>{price}</b>\n"
            f"Includes: {highlights_en}\n\n"
            f"Booking: {AGENCY['phone']} / WhatsApp: {AGENCY['whatsapp']}"
        )

    kb = InlineKeyboardMarkup([[InlineKeyboardButton(t("back", lang), callback_data="tour")]])

    # Try to edit to a photo if current message has photo or send new photo otherwise
    try:
        if query.message.photo:
            await query.edit_message_media(
                media=InputMediaPhoto(media=photo, caption=caption, parse_mode=ParseMode.HTML),
                reply_markup=kb,
            )
        else:
            # send a new photo message and keep old message
            await query.message.reply_photo(photo=photo, caption=caption, parse_mode=ParseMode.HTML, reply_markup=kb)
    except Exception:
        await query.message.reply_text(caption, parse_mode=ParseMode.HTML, reply_markup=kb)


# ==============================
# ЁЯЪА App bootstrap
# ==============================

def main():
    if not TOKEN or TOKEN == "PUT_YOUR_BOT_TOKEN_HERE":
        raise RuntimeError("Please set TELEGRAM_BOT_TOKEN env var or put your bot token in TOKEN.")

    app = ApplicationBuilder().token(TOKEN).defaults(Defaults(parse_mode=ParseMode.HTML)).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(on_button))

    print("тЬЕ Travel Agency Bot is runningтАж Press CTRL+C to stop.")
    app.run_polling(close_loop=False)


if __name__ == "__main__":
    main()

